ALTER SESSION SET NLS_DATE_FORMAT='DD/MM/YYYY HH24:MI';

drop table ativos cascade constraints;

drop table clientes CASCADE constraints;

drop table dispositivos CASCADE constraints;

drop table eventos CASCADE constraints;

drop table fatura CASCADE constraints;


-- Generated by Oracle SQL Developer Data Modeler 19.4.0.350.1424
--   at:        2020-04-08 10:53:19 BST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE ativos (
    id_ativos            INTEGER NOT NULL,
    classificação        VARCHAR2(100) NOT NULL,
    tipo_ativos          VARCHAR2(100) NOT NULL,
    cidade_ativo         VARCHAR2(50) NOT NULL,
    endereço_ativo       VARCHAR2(150),
    coordenadas          VARCHAR2(50) NOT NULL,
    hora_inicial         DATE NOT NULL,
    hora_final           DATE NOT NULL,
    clientes_id_cliente  INTEGER NOT NULL
);

ALTER TABLE ativos ADD CONSTRAINT ativos_pk PRIMARY KEY ( id_ativos,
                                                          clientes_id_cliente );

CREATE TABLE clientes (
    id_cliente        INTEGER NOT NULL,
    nome              VARCHAR2(150) NOT NULL,
    data_nascimento   DATE NOT NULL,
    nº_contribuinte   INTEGER NOT NULL,
    numerotele        INTEGER,
    endereço_cliente  VARCHAR2(150),
    nº_dispositivos  INTEGER
);

ALTER TABLE clientes ADD CONSTRAINT clientes_pk PRIMARY KEY ( id_cliente );

CREATE TABLE dispositivos (
    id_dispositivos    INTEGER NOT NULL,
    tipo_dispositivos  VARCHAR2(100) NOT NULL,
    alerta             INTEGER,
    evento             INTEGER,
    ativos_id_ativos   INTEGER NOT NULL,
    ativos_id_cliente  INTEGER NOT NULL
);

ALTER TABLE dispositivos ADD CONSTRAINT dispositivos_pk PRIMARY KEY ( id_dispositivos );

CREATE TABLE eventos (
    id                            INTEGER NOT NULL,
    dia_hora                      DATE NOT NULL,
    gravidade                     INTEGER,
    dispositivos_id_dispositivos  INTEGER NOT NULL
);

ALTER TABLE eventos ADD CONSTRAINT eventos_pk PRIMARY KEY ( id,
                                                            dispositivos_id_dispositivos );

CREATE TABLE fatura (
    id_fatura            INTEGER NOT NULL,
    preço                NUMBER(10, 4),
    enderenço_fatura     VARCHAR2(150) NOT NULL,
    codigo_postal        VARCHAR2(10) NOT NULL,
    cidade_fatura        VARCHAR2(50),
    clientes_id_cliente  INTEGER NOT NULL
);

CREATE UNIQUE INDEX fatura__idx ON
    fatura (
        clientes_id_cliente
    ASC );

ALTER TABLE fatura ADD CONSTRAINT fatura_pk PRIMARY KEY ( id_fatura );

ALTER TABLE ativos
    ADD CONSTRAINT ativos_clientes_fk FOREIGN KEY ( clientes_id_cliente )
        REFERENCES clientes ( id_cliente );

ALTER TABLE dispositivos
    ADD CONSTRAINT dispositivos_ativos_fk FOREIGN KEY ( ativos_id_ativos,
                                                        ativos_id_cliente )
        REFERENCES ativos ( id_ativos,
                            clientes_id_cliente ) ON DELETE CASCADE;

ALTER TABLE eventos
    ADD CONSTRAINT eventos_dispositivos_fk FOREIGN KEY ( dispositivos_id_dispositivos )
        REFERENCES dispositivos ( id_dispositivos ) ON DELETE CASCADE;

ALTER TABLE fatura
    ADD CONSTRAINT fatura_clientes_fk FOREIGN KEY ( clientes_id_cliente )
        REFERENCES clientes ( id_cliente );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             5
-- CREATE INDEX                             1
-- ALTER TABLE                              9
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
 
--adicionar clientes(nome, contribuinte, telemovel, endereço, data de nascimento)
select * from clientes;

EXECUTE add_cliente('João Cabacinho', 12345678, 969639726, 'Rua do Pombal',TO_DATE('02-09-1997','DD-MM-YYYY')); 

EXECUTE add_cliente('Rui Martins', 12684378, NULL, NULL, TO_DATE('26-04-1995','DD-MM-YYYY')); 

EXECUTE add_cliente('Maria Alberta', 12342001, 963339334, 'Rua da Anilha',TO_DATE('29-03-1991','DD-MM-YYYY'));

EXECUTE add_cliente('André António', 13987268, NULL, NULL, TO_DATE('13-11-1951','DD-MM-YYYY'));

EXECUTE add_cliente('Marta Valente', 13386408, NULL, NULL, TO_DATE('17-06-1957','DD-MM-YYYY'));

EXECUTE add_cliente('Maria Antonieta', 19731467, NULL, NULL, TO_DATE('23-09-1967','DD-MM-YYYY'));

select * from clientes;

--adicionar ativos(tipo, tipologia, endereço, cidade, coordenadas, hora inicial, hora final, id do cliente)

select * from ativos;

EXECUTE add_ativo('estático', 'habitação', 'Rua do Pombal', 'Angra do Heroísmo', '38.658873,-27.258672', TO_DATE('10:00','HH24:MI'), TO_DATE('18:00','HH24:MI'), 1);

EXECUTE add_ativo('estático', 'armazem', 'Rua da Esgueira', 'Porto', '38.724688,-8.909908', TO_DATE('8:00','HH24:MI'), TO_DATE('20:00','HH24:MI'), 1);

EXECUTE add_ativo('móveis', 'contentor', NULL, 'Angra do Heroísmo', '24.658873,-53.258672', TO_DATE('00:00','HH24:MI'), TO_DATE('23:00','HH24:MI'), 1);

EXECUTE add_ativo('estático', 'habitação', 'Rua da Anilha', 'Lisboa', '100.7281788,-10.901928', TO_DATE('08:00','HH24:MI'), TO_DATE('20:00','HH24:MI'), 2);

EXECUTE add_ativo('móveis', 'carro', NULL, 'Porto', '38.658873,-27.258672', TO_DATE('01:00','HH24:MI'), TO_DATE('8:00','HH24:MI'), 2);

EXECUTE add_ativo('móveis', 'carro', NULL, 'Porto', '38.658873,-27.258672', TO_DATE('01:00','HH24:MI'), TO_DATE('8:00','HH24:MI'), 3);

EXECUTE add_ativo('móveis', 'carro', NULL, 'Lisboa', '38.658873,-27.258672', TO_DATE('01:00','HH24:MI'), TO_DATE('8:00','HH24:MI'), 4);

EXECUTE add_ativo('móveis', 'carro', NULL, 'Albufeira', '38.658873,-27.258672', TO_DATE('01:00','HH24:MI'), TO_DATE('9:00','HH24:MI'), 5);

EXECUTE add_ativo('móveis', 'carro', NULL, 'Portimão', '38.658873,-27.258672', TO_DATE('02:00','HH24:MI'), TO_DATE('9:00','HH24:MI'), 6);

select * from ativos;
    
-- inserir dispositivos(tipo, alerta, id do ativo, id do cliente)

select * from dispositivos;

EXECUTE add_dispositivo('detetor de presença', 0, 1, 1);

EXECUTE add_dispositivo('camera exterior', 0, 2, 1); 

EXECUTE add_dispositivo('camera exterior', 0, 3, 1); 

EXECUTE add_dispositivo('detetor de presença', 0, 2, 1);

EXECUTE add_dispositivo('detetor de presença', 0, 4, 2);

EXECUTE add_dispositivo('detetor de presença', 0, 4, 2);

EXECUTE add_dispositivo('GPS', 0, 6, 3);

EXECUTE add_dispositivo('GPS', 0, 7, 4);

EXECUTE add_dispositivo('GPS', 0, 8, 5);

EXECUTE add_dispositivo('GPS', 0, 9, 6);

select * from dispositivos;

--adicionar eventos(id do evento, data, id do dispositivo, gravidade)
select * from eventos;

EXECUTE add_evento(1, TO_DATE('14-03-2010 23:56','DD-MM-YYYY HH24:MI'), 1, 0);

EXECUTE add_evento(2, TO_DATE('10-10-2019 23:56','DD-MM-YYYY HH24:MI'), 1, 0);

EXECUTE add_evento(3, TO_DATE('02-09-2019 23:56','DD-MM-YYYY HH24:MI'), 1, 1);

EXECUTE add_evento(1, TO_DATE('15-03-2020 23:56','DD-MM-YYYY HH24:MI'), 2, 0);

EXECUTE add_evento(2, TO_DATE('27-08-2019 23:56','DD-MM-YYYY HH24:MI'), 2, 1);

EXECUTE add_evento(1, TO_DATE('24-12-2019 12:00','DD-MM-YYYY HH24:MI'), 3, 1);

EXECUTE add_evento(1, TO_DATE('15-11-2019 05:00','DD-MM-YYYY HH24:MI'), 4, 0);   

EXECUTE add_evento(4, TO_DATE('15-01-2020 05:00','DD-MM-YYYY HH24:MI'), 1, 0); 

EXECUTE add_evento(5, TO_DATE('15-02-2020 05:00','DD-MM-YYYY HH24:MI'), 1, 0); 

EXECUTE add_evento(6, TO_DATE('15-03-2020 05:00','DD-MM-YYYY HH24:MI'), 1, 0); 

EXECUTE add_evento(7, TO_DATE('16-03-2020 05:00','DD-MM-YYYY HH24:MI'), 1, 0); 


select * from eventos;

select * from dispositivos;

-- Adicionar fatura(Endereço, Cidade, Codigo postal, id do cliente)
select * from fatura;

EXECUTE ADD_fatura('Rua antonio', 'Lisboa', '1200', 1);

EXECUTE ADD_fatura('Rua das padeiras', 'Setubal', '1910', 2);

EXECUTE ADD_fatura('Rua da Anilha', 'Porto', '2300', 3);

EXECUTE ADD_fatura('Saldanha', 'Lisboa', '1250', 4);

EXECUTE ADD_fatura('Rua Miquelina', 'Lisboa', '1210', 5);

EXECUTE ADD_fatura('Avenida dos peixes', 'Setubal', '9700', 6);

select * from fatura;

--Atualizar dados do cliente(id do cliente, nºtelemovel/endereço)

EXECUTE update_tele_cliente(2, 910033492);

EXECUTE update_endereço_cliente(2, 'Setubal');

EXECUTE update_tele_cliente(4, 931057389);

EXECUTE update_endereço_cliente(4, 'Lisboa');

EXECUTE update_tele_cliente(5, 920188593);

EXECUTE update_endereço_cliente(5, 'Lisboa');

EXECUTE update_tele_cliente(6, 917795773);

EXECUTE update_endereço_cliente(6, 'Setubal');

select * from clientes;
-- RF 3

select * from table(visualizar_alerta(TO_DATE('13-03-2010 23:56','DD-MM-YYYY HH24:MI'), TO_DATE('15-03-2010 23:56','DD-MM-YYYY HH24:MI')));

-- RF 4 Considerando que os ativos estão em localizações distintas, visualizar a quantidade de eventos por cidade.

select a.cidade_ativo, count (e.id)
    from eventos e
    right join dispositivos d
    on e.dispositivos_id_dispositivos = d.id_dispositivos
    inner join ativos a
    on a.clientes_id_cliente = d.ativos_id_cliente and a.id_ativos = d.ativos_id_ativos
    group by a.cidade_ativo;

-- RF 5 Visualizar os dispositivos associados a um ativo 

select ativos.tipo_ativos, dispositivos.tipo_dispositivos
from dispositivos
inner join ativos
on ativos.id_ativos = dispositivos.ativos_id_ativos
order by ativos.tipo_ativos;

-- RF 6 - Visualizar os ativos mais problemáticos, nos últimos 180 dias. com mais do que 3 eventos

select a.id_ativos as Ativo, a.clientes_id_cliente as Cliente, count (e.id) as N_Eventos
    from ativos a 
    left join dispositivos d
    on a.clientes_id_cliente = d.ativos_id_cliente and a.id_ativos = d.ativos_id_ativos
    inner join eventos e
    on d.id_dispositivos = e.dispositivos_id_dispositivos
    where dia_hora > sysdate - 180 
    group by a.id_ativos, a.clientes_id_cliente
    having count(e.id) > 3
    order by N_Eventos DESC;
    
-- RF 7 Visualizar os clientes e os respetivos alertas (decorrentes dos seus ativos).

select * from table(visualizar_alerta_cliente(1));
    
-- RF 8 Visualizar cada cliente e o respetivo valor mensal a pagar. 

select id_cliente, nome, preço
    from clientes c, fatura f
    where c.id_cliente = f.clientes_id_cliente;
    
-- RF 9 Lista de ativos estáticos que têm câmera

select id_ativos, classificação, tipo_ativos, endereço_ativo, cidade_ativo, coordenadas, to_char(hora_inicial,'HH24:MI'), to_char(hora_final, 'HH24:MI'), clientes_id_cliente
    from ativos a, dispositivos d
    where a.classificação = 'estático' and (d.tipo_dispositivos like 'camera%') and a.clientes_id_cliente = d.ativos_id_cliente and a.id_ativos = d.ativos_id_ativos;

-- RF 10 Clientes com mais de 65 anos

select * from clientes
    where data_nascimento < sysdate - interval '65' year
    order by data_nascimento desc;
    
-- RF 11 O total dinheiro a receber dos clientes max e min

select sum (f.preço) as Total, max(f.preço) as Máximo, min(f.preço) as Mínimo
    from fatura f
    inner join clientes c
    on c.id_cliente = f.clientes_id_cliente;

-- RF 12 Que clientes têm mais de x dispositivos

select * from table(visualizar_dispositivos_clientes(1));

--Apagar evento

select * from eventos;

EXECUTE delete_evento(7, 1);

select * from eventos;

--Apagar dispositivos(e evento associado)

select * from dispositivos;

EXECUTE delete_dispositivo(10);

select * from dispositivos;

--Apagar dispositivos, ativos e eventos associados a um cliente

EXECUTE delete_cliente(6);

select * from ativos;
select * from dispositivos;
select * from eventos;
